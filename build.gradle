plugins {
    id "org.sonarqube" version "5.0.0.4638"
}


version = '0.0.1-SNAPSHOT'

allprojects {
    apply plugin: "java"
    apply plugin: "jacoco"

    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: "checkstyle"
    apply plugin: "pmd"

    group = 'be.xplore.githubmetrics'

    tasks.withType(JavaCompile).configureEach {
        configure(options) {
            options.compilerArgs.add("-Werror")
        }
    }

    java {
        sourceCompatibility = JavaVersion.VERSION_21
    }

    sonar {
        properties {
            property "sonar.sources", "src/main"
            property "sonar.tests", "src/test"
        }
    }
    dependencies {
        testImplementation 'org.junit.jupiter:junit-jupiter:5.10.2'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    }

    tasks.named('test', Test) {
        useJUnitPlatform()

        maxHeapSize = '1G'

        testLogging {
            events "passed"
        }
    }

    jacocoTestReport {
        reports {
            html.required = true
            xml.required = true
        }
    }

    test.finalizedBy(project.tasks.jacocoTestReport)
}

sonar {
    properties {
        property "sonar.projectKey", "github-insights_github-metrics"
        property "sonar.organization", "github-insights"
        property "sonar.host.url", "https://sonarcloud.io"
        property "sonar.sourceEncoding", "UTF-8"
        property "sonar.qualitygate.wait", "true"
    }
}


task jacocoRootReport(type: JacocoReport, group: 'Coverage reports') {
    description = 'Generates an aggregate report from all subprojects'
    dependsOn(subprojects.test)

    additionalSourceDirs.from = files(subprojects.sourceSets.main.allSource.srcDirs)
    sourceDirectories.from = files(subprojects.sourceSets.main.allSource.srcDirs)
    classDirectories.from = files(subprojects.sourceSets.main.output)
    executionData.from = files(subprojects.jacocoTestReport.executionData)

    reports {
        xml.required = true
    }
}

build.finalizedBy(jacocoRootReport)
//build.finalizedBy(sonar)





